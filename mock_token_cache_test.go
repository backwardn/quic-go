// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/lucas-clemente/quic-go (interfaces: TokenCache)

// Package quic is a generated GoMock package.
package quic

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockTokenCache is a mock of TokenCache interface
type MockTokenCache struct {
	ctrl     *gomock.Controller
	recorder *MockTokenCacheMockRecorder
}

// MockTokenCacheMockRecorder is the mock recorder for MockTokenCache
type MockTokenCacheMockRecorder struct {
	mock *MockTokenCache
}

// NewMockTokenCache creates a new mock instance
func NewMockTokenCache(ctrl *gomock.Controller) *MockTokenCache {
	mock := &MockTokenCache{ctrl: ctrl}
	mock.recorder = &MockTokenCacheMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockTokenCache) EXPECT() *MockTokenCacheMockRecorder {
	return m.recorder
}

// Get mocks base method
func (m *MockTokenCache) Get(arg0 string) (*ClientToken, bool) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", arg0)
	ret0, _ := ret[0].(*ClientToken)
	ret1, _ := ret[1].(bool)
	return ret0, ret1
}

// Get indicates an expected call of Get
func (mr *MockTokenCacheMockRecorder) Get(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockTokenCache)(nil).Get), arg0)
}

// Put mocks base method
func (m *MockTokenCache) Put(arg0 string, arg1 *ClientToken) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Put", arg0, arg1)
}

// Put indicates an expected call of Put
func (mr *MockTokenCacheMockRecorder) Put(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Put", reflect.TypeOf((*MockTokenCache)(nil).Put), arg0, arg1)
}
